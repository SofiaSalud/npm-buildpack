#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

set -o errexit    # always exit on error
set -o pipefail   # don't ignore exit codes when piping output
set -o nounset    # fail on unset variables

BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}
BP_DIR=$(cd $(dirname ${0:-}); cd ..; pwd)

source $BP_DIR/lib/environment.sh
export_env_dir "$ENV_DIR"

if [[ -z "${APP_BASE}" ]]; then
  PROJ_DIR="$BUILD_DIR"
else
  PROJ_DIR="$BUILD_DIR/$APP_BASE"
fi

echo "Creating .npmrc"
echo "" >> $PROJ_DIR/.npmrc
echo "//registry.npmjs.org/:_authToken=$NPM_AUTH_TOKEN" >> $PROJ_DIR/.npmrc
echo "//registry.yarnpkg.com/:_authToken=$NPM_AUTH_TOKEN" >> $PROJ_DIR/.npmrc
echo "registry=https://registry.npmjs.org" >> $PROJ_DIR/.npmrc

echo "Creating .yarnrc"
echo "" >> $PROJ_DIR/.yarnrc
echo "registry \"https://registry.npmjs.org\"" >> $PROJ_DIR/.yarnrc

sed -ie 's,registry.yarnpkg.com/@sofia,registry.npmjs.org/@sofia,' $PROJ_DIR/yarn.lock
